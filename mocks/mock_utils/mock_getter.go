// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/nitrictech/cli/pkg/project/templates (interfaces: GetterClient)

// Package mock_templates is a generated GoMock package.
package mock_templates

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGetterClient is a mock of GetterClient interface.
type MockGetterClient struct {
	ctrl     *gomock.Controller
	recorder *MockGetterClientMockRecorder
}

// MockGetterClientMockRecorder is the mock recorder for MockGetterClient.
type MockGetterClientMockRecorder struct {
	mock *MockGetterClient
}

// NewMockGetterClient creates a new mock instance.
func NewMockGetterClient(ctrl *gomock.Controller) *MockGetterClient {
	mock := &MockGetterClient{ctrl: ctrl}
	mock.recorder = &MockGetterClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetterClient) EXPECT() *MockGetterClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockGetterClient) Get() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(error)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockGetterClientMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGetterClient)(nil).Get))
}
